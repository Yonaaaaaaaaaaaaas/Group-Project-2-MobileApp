// Mocks generated by Mockito 5.4.6 from annotations
// in iddir_app/test/features/auth/presentation/providers/auth_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i2;
import 'package:iddir_app/features/auth/data/data_sources/auth_remote_datasource.dart'
    as _i4;
import 'package:iddir_app/features/auth/data/models/user_model.dart' as _i7;
import 'package:iddir_app/features/auth/data/repositories/auth_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_annotation/riverpod_annotation.dart' as _i3;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAutoDisposeNotifierProviderRef_1<T> extends _i1.SmartFake
    implements _i3.AutoDisposeNotifierProviderRef<T> {
  _FakeAutoDisposeNotifierProviderRef_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeAuthRemoteDatasource_2 extends _i1.SmartFake
    implements _i4.AuthRemoteDatasource {
  _FakeAuthRemoteDatasource_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i5.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(
            Invocation.getter(#dio),
            returnValue: _FakeDio_0(this, Invocation.getter(#dio)),
          )
          as _i2.Dio);

  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
    Invocation.setter(#dio, _dio),
    returnValueForMissingStub: null,
  );

  @override
  _i3.AutoDisposeNotifierProviderRef<_i4.AuthRemoteDatasource> get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue:
                _FakeAutoDisposeNotifierProviderRef_1<_i4.AuthRemoteDatasource>(
                  this,
                  Invocation.getter(#ref),
                ),
          )
          as _i3.AutoDisposeNotifierProviderRef<_i4.AuthRemoteDatasource>);

  @override
  _i4.AuthRemoteDatasource get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeAuthRemoteDatasource_2(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i4.AuthRemoteDatasource);

  @override
  set state(_i4.AuthRemoteDatasource? value) => super.noSuchMethod(
    Invocation.setter(#state, value),
    returnValueForMissingStub: null,
  );

  @override
  _i4.AuthRemoteDatasource build(_i2.Dio? dio) =>
      (super.noSuchMethod(
            Invocation.method(#build, [dio]),
            returnValue: _FakeAuthRemoteDatasource_2(
              this,
              Invocation.method(#build, [dio]),
            ),
          )
          as _i4.AuthRemoteDatasource);

  @override
  _i6.Future<Map<String, dynamic>?> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#email: email, #password: password}),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<Map<String, dynamic>?> register({
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {#data: data}),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<_i7.UserModel?> getMe({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#getMe, [], {#token: token}),
            returnValue: _i6.Future<_i7.UserModel?>.value(),
          )
          as _i6.Future<_i7.UserModel?>);

  @override
  void listenSelf(
    void Function(_i4.AuthRemoteDatasource?, _i4.AuthRemoteDatasource)?
    listener, {
    void Function(Object, StackTrace)? onError,
  }) => super.noSuchMethod(
    Invocation.method(#listenSelf, [listener], {#onError: onError}),
    returnValueForMissingStub: null,
  );

  @override
  bool updateShouldNotify(
    _i4.AuthRemoteDatasource? previous,
    _i4.AuthRemoteDatasource? next,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateShouldNotify, [previous, next]),
            returnValue: false,
          )
          as bool);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i8.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i6.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
