// Mocks generated by Mockito 5.4.6 from annotations
// in iddir_app/test/features/announcement/data/repositories/announcement_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:iddir_app/features/announcement/data/data_sources/announcement_remote_datasource.dart'
    as _i4;
import 'package:iddir_app/features/announcement/data/models/announcement_model.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAnnouncementModel_1 extends _i1.SmartFake
    implements _i3.AnnouncementModel {
  _FakeAnnouncementModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AnnouncementRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnnouncementRemoteDatasource extends _i1.Mock
    implements _i4.AnnouncementRemoteDatasource {
  MockAnnouncementRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(
            Invocation.getter(#dio),
            returnValue: _FakeDio_0(this, Invocation.getter(#dio)),
          )
          as _i2.Dio);

  @override
  _i5.Future<List<_i3.AnnouncementModel>> getAllAnnouncements() =>
      (super.noSuchMethod(
            Invocation.method(#getAllAnnouncements, []),
            returnValue: _i5.Future<List<_i3.AnnouncementModel>>.value(
              <_i3.AnnouncementModel>[],
            ),
          )
          as _i5.Future<List<_i3.AnnouncementModel>>);

  @override
  _i5.Future<_i3.AnnouncementModel> createAnnouncement(
    String? token,
    Map<String, dynamic>? data,
    dynamic imageData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createAnnouncement, [token, data, imageData]),
            returnValue: _i5.Future<_i3.AnnouncementModel>.value(
              _FakeAnnouncementModel_1(
                this,
                Invocation.method(#createAnnouncement, [
                  token,
                  data,
                  imageData,
                ]),
              ),
            ),
          )
          as _i5.Future<_i3.AnnouncementModel>);

  @override
  _i5.Future<_i3.AnnouncementModel> updateAnnouncement(
    String? token,
    String? id,
    Map<String, dynamic>? data,
    dynamic imageData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateAnnouncement, [
              token,
              id,
              data,
              imageData,
            ]),
            returnValue: _i5.Future<_i3.AnnouncementModel>.value(
              _FakeAnnouncementModel_1(
                this,
                Invocation.method(#updateAnnouncement, [
                  token,
                  id,
                  data,
                  imageData,
                ]),
              ),
            ),
          )
          as _i5.Future<_i3.AnnouncementModel>);

  @override
  _i5.Future<bool> deleteAnnouncement(String? token, String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAnnouncement, [token, id]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
